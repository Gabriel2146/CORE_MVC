# Guía paso a paso para desplegar tu aplicación Django + PostgreSQL en my.domcloud.co

## 1. Prepara tu código y repositorio
- Sube tu proyecto a GitHub (ya lo tienes: https://github.com/Gabriel2146/CORE_MVC)
- Asegúrate de que tu `requirements.txt` esté actualizado.

## 2. Crea la base de datos en domcloud
1. Entra al panel de domcloud.
2. Ve a la sección de bases de datos y crea una nueva base PostgreSQL.
3. Anota:
   - Nombre de la base de datos
   - Usuario
   - Contraseña
   - Host (usualmente `localhost` o el que te indique domcloud)
   - Puerto (usualmente 5432)

## 3. Exporta tu base de datos local (si quieres migrar datos)
En tu PC local (donde tienes los datos):

```powershell
pg_dump -U postgres -h localhost -p 5432 core_mvc_db > backup_core_mvc.sql
```
- Cambia los valores si tu usuario/puerto/nombre de base son distintos.

## 4. Sube el backup a domcloud
- Usa el panel de archivos de domcloud o SFTP para subir `backup_core_mvc.sql` a tu carpeta de usuario.

## 5. Restaura el backup en domcloud
En el panel de domcloud, abre una terminal web y ejecuta:

```sh
psql -U TU_USUARIO -d TU_BASE -f backup_core_mvc.sql
```
- Cambia `TU_USUARIO` y `TU_BASE` por los datos de tu base de datos.
- Si te pide contraseña, ingrésala.

## 6. Configura tu archivo settings.py
Edita la sección `DATABASES` en `core_mvc_backend/settings.py` así:

```python
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'nombre_que_te_da_domcloud',
        'USER': 'usuario_que_te_da_domcloud',
        'PASSWORD': 'contraseña_que_te_da_domcloud',
        'HOST': 'host_que_te_da_domcloud',
        'PORT': '5432',
    }
}
```

## 7. Configura el despliegue en domcloud
Crea o edita el archivo de configuración de despliegue (por ejemplo, `domcloud.yaml`):

```yaml
features:
  -
    create:
      domain: TU_DOMINIO.dom.my.id
      user: TU_USUARIO
      pass: '<tu_password>'
      email: tu@email.com
  - firewall
  - 'python stable'
  - ssl
  - 'ssl always'
source: 'https://github.com/Gabriel2146/CORE_MVC'
nginx:
  root: public_html
  passenger:
    enabled: 'on'
    python: .pyenv/shims/python
commands:
  - 'pip install -r requirements.txt || pip install django'
  - 'sed -i "s/ALLOWED_HOSTS = \[\]/ALLOWED_HOSTS = [\'${DOMAIN}\']/g" core_mvc_backend/settings.py'
  - 'echo "from core_mvc_backend.wsgi import application" > passenger_wsgi.py'
  - 'python manage.py migrate || true'
  - 'python manage.py collectstatic --noinput || true'
  - 'chmod -R 755 public_html'
  - 'touch tmp/restart.txt'
```

## 8. Despliega
- Inicia el despliegue desde el panel de domcloud.
- Espera a que termine y revisa los logs.

## 9. Accede a tu sitio
- Visita tu dominio y verifica que todo funcione.

---

**Notas:**
- Si solo quieres la estructura y no los datos, omite los pasos 3, 4 y 5.
- Si tienes problemas de permisos, revisa los logs y la configuración de usuario/contraseña.
- Si cambias el dominio, actualiza también `ALLOWED_HOSTS` en `settings.py`.

¡Listo! Tu app Django estará funcionando en domcloud con tu base de datos y datos migrados.
